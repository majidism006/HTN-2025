"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./hooks/useGroup.ts":
/*!***************************!*\
  !*** ./hooks/useGroup.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useGroup: () => (/* binding */ useGroup)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction useGroup() {\n    const [groupState, setGroupState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        groupId: null,\n        userId: null,\n        userName: null,\n        groupCode: null,\n        groupName: null\n    });\n    // Load from localStorage on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useGroup.useEffect\": ()=>{\n            try {\n                const saved = localStorage.getItem('synchrosched-group');\n                if (saved) {\n                    try {\n                        const parsed = JSON.parse(saved);\n                        setGroupState(parsed);\n                    } catch (error) {\n                        console.error('Error parsing saved group state:', error);\n                        // Clear corrupted data\n                        localStorage.removeItem('synchrosched-group');\n                    }\n                }\n            } catch (error) {\n                console.error('Error accessing localStorage:', error);\n            }\n        }\n    }[\"useGroup.useEffect\"], []);\n    // Save to localStorage whenever state changes\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useGroup.useEffect\": ()=>{\n            if (groupState.groupId) {\n                try {\n                    localStorage.setItem('synchrosched-group', JSON.stringify(groupState));\n                } catch (error) {\n                    console.error('Error saving group state to localStorage:', error);\n                }\n            }\n        }\n    }[\"useGroup.useEffect\"], [\n        groupState\n    ]);\n    const setGroup = (groupId, userId, userName, groupCode, groupName)=>{\n        setGroupState({\n            groupId,\n            userId,\n            userName,\n            groupCode,\n            groupName: groupName || null\n        });\n    };\n    const clearGroup = ()=>{\n        setGroupState({\n            groupId: null,\n            userId: null,\n            userName: null,\n            groupCode: null,\n            groupName: null\n        });\n        localStorage.removeItem('synchrosched-group');\n    };\n    const isInGroup = groupState.groupId !== null;\n    return {\n        ...groupState,\n        setGroup,\n        clearGroup,\n        isInGroup\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2hvb2tzL3VzZUdyb3VwLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE0QztBQVVyQyxTQUFTRTtJQUNkLE1BQU0sQ0FBQ0MsWUFBWUMsY0FBYyxHQUFHSiwrQ0FBUUEsQ0FBYTtRQUN2REssU0FBUztRQUNUQyxRQUFRO1FBQ1JDLFVBQVU7UUFDVkMsV0FBVztRQUNYQyxXQUFXO0lBQ2I7SUFFQSxrQ0FBa0M7SUFDbENSLGdEQUFTQTs4QkFBQztZQUNSLElBQUk7Z0JBQ0YsTUFBTVMsUUFBUUMsYUFBYUMsT0FBTyxDQUFDO2dCQUNuQyxJQUFJRixPQUFPO29CQUNULElBQUk7d0JBQ0YsTUFBTUcsU0FBU0MsS0FBS0MsS0FBSyxDQUFDTDt3QkFDMUJOLGNBQWNTO29CQUNoQixFQUFFLE9BQU9HLE9BQU87d0JBQ2RDLFFBQVFELEtBQUssQ0FBQyxvQ0FBb0NBO3dCQUNsRCx1QkFBdUI7d0JBQ3ZCTCxhQUFhTyxVQUFVLENBQUM7b0JBQzFCO2dCQUNGO1lBQ0YsRUFBRSxPQUFPRixPQUFPO2dCQUNkQyxRQUFRRCxLQUFLLENBQUMsaUNBQWlDQTtZQUNqRDtRQUNGOzZCQUFHLEVBQUU7SUFFTCw4Q0FBOEM7SUFDOUNmLGdEQUFTQTs4QkFBQztZQUNSLElBQUlFLFdBQVdFLE9BQU8sRUFBRTtnQkFDdEIsSUFBSTtvQkFDRk0sYUFBYVEsT0FBTyxDQUFDLHNCQUFzQkwsS0FBS00sU0FBUyxDQUFDakI7Z0JBQzVELEVBQUUsT0FBT2EsT0FBTztvQkFDZEMsUUFBUUQsS0FBSyxDQUFDLDZDQUE2Q0E7Z0JBQzdEO1lBQ0Y7UUFDRjs2QkFBRztRQUFDYjtLQUFXO0lBRWYsTUFBTWtCLFdBQVcsQ0FBQ2hCLFNBQWlCQyxRQUFnQkMsVUFBa0JDLFdBQW1CQztRQUN0RkwsY0FBYztZQUFFQztZQUFTQztZQUFRQztZQUFVQztZQUFXQyxXQUFXQSxhQUFhO1FBQUs7SUFDckY7SUFFQSxNQUFNYSxhQUFhO1FBQ2pCbEIsY0FBYztZQUFFQyxTQUFTO1lBQU1DLFFBQVE7WUFBTUMsVUFBVTtZQUFNQyxXQUFXO1lBQU1DLFdBQVc7UUFBSztRQUM5RkUsYUFBYU8sVUFBVSxDQUFDO0lBQzFCO0lBRUEsTUFBTUssWUFBWXBCLFdBQVdFLE9BQU8sS0FBSztJQUV6QyxPQUFPO1FBQ0wsR0FBR0YsVUFBVTtRQUNia0I7UUFDQUM7UUFDQUM7SUFDRjtBQUNGIiwic291cmNlcyI6WyIvaG9tZS9oYWRpL0hUTi0yMDI1L2hvb2tzL3VzZUdyb3VwLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XHJcblxyXG5pbnRlcmZhY2UgR3JvdXBTdGF0ZSB7XHJcbiAgZ3JvdXBJZDogc3RyaW5nIHwgbnVsbDtcclxuICB1c2VySWQ6IHN0cmluZyB8IG51bGw7XHJcbiAgdXNlck5hbWU6IHN0cmluZyB8IG51bGw7XHJcbiAgZ3JvdXBDb2RlOiBzdHJpbmcgfCBudWxsO1xyXG4gIGdyb3VwTmFtZTogc3RyaW5nIHwgbnVsbDtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHVzZUdyb3VwKCkge1xyXG4gIGNvbnN0IFtncm91cFN0YXRlLCBzZXRHcm91cFN0YXRlXSA9IHVzZVN0YXRlPEdyb3VwU3RhdGU+KHtcclxuICAgIGdyb3VwSWQ6IG51bGwsXHJcbiAgICB1c2VySWQ6IG51bGwsXHJcbiAgICB1c2VyTmFtZTogbnVsbCxcclxuICAgIGdyb3VwQ29kZTogbnVsbCxcclxuICAgIGdyb3VwTmFtZTogbnVsbCxcclxuICB9KTtcclxuXHJcbiAgLy8gTG9hZCBmcm9tIGxvY2FsU3RvcmFnZSBvbiBtb3VudFxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCBzYXZlZCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdzeW5jaHJvc2NoZWQtZ3JvdXAnKTtcclxuICAgICAgaWYgKHNhdmVkKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgIGNvbnN0IHBhcnNlZCA9IEpTT04ucGFyc2Uoc2F2ZWQpO1xyXG4gICAgICAgICAgc2V0R3JvdXBTdGF0ZShwYXJzZWQpO1xyXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBwYXJzaW5nIHNhdmVkIGdyb3VwIHN0YXRlOicsIGVycm9yKTtcclxuICAgICAgICAgIC8vIENsZWFyIGNvcnJ1cHRlZCBkYXRhXHJcbiAgICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgnc3luY2hyb3NjaGVkLWdyb3VwJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBhY2Nlc3NpbmcgbG9jYWxTdG9yYWdlOicsIGVycm9yKTtcclxuICAgIH1cclxuICB9LCBbXSk7XHJcblxyXG4gIC8vIFNhdmUgdG8gbG9jYWxTdG9yYWdlIHdoZW5ldmVyIHN0YXRlIGNoYW5nZXNcclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgaWYgKGdyb3VwU3RhdGUuZ3JvdXBJZCkge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdzeW5jaHJvc2NoZWQtZ3JvdXAnLCBKU09OLnN0cmluZ2lmeShncm91cFN0YXRlKSk7XHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3Igc2F2aW5nIGdyb3VwIHN0YXRlIHRvIGxvY2FsU3RvcmFnZTonLCBlcnJvcik7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9LCBbZ3JvdXBTdGF0ZV0pO1xyXG5cclxuICBjb25zdCBzZXRHcm91cCA9IChncm91cElkOiBzdHJpbmcsIHVzZXJJZDogc3RyaW5nLCB1c2VyTmFtZTogc3RyaW5nLCBncm91cENvZGU6IHN0cmluZywgZ3JvdXBOYW1lPzogc3RyaW5nKSA9PiB7XHJcbiAgICBzZXRHcm91cFN0YXRlKHsgZ3JvdXBJZCwgdXNlcklkLCB1c2VyTmFtZSwgZ3JvdXBDb2RlLCBncm91cE5hbWU6IGdyb3VwTmFtZSB8fCBudWxsIH0pO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGNsZWFyR3JvdXAgPSAoKSA9PiB7XHJcbiAgICBzZXRHcm91cFN0YXRlKHsgZ3JvdXBJZDogbnVsbCwgdXNlcklkOiBudWxsLCB1c2VyTmFtZTogbnVsbCwgZ3JvdXBDb2RlOiBudWxsLCBncm91cE5hbWU6IG51bGwgfSk7XHJcbiAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgnc3luY2hyb3NjaGVkLWdyb3VwJyk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgaXNJbkdyb3VwID0gZ3JvdXBTdGF0ZS5ncm91cElkICE9PSBudWxsO1xyXG5cclxuICByZXR1cm4ge1xyXG4gICAgLi4uZ3JvdXBTdGF0ZSxcclxuICAgIHNldEdyb3VwLFxyXG4gICAgY2xlYXJHcm91cCxcclxuICAgIGlzSW5Hcm91cCxcclxuICB9O1xyXG59XHJcbiJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInVzZUdyb3VwIiwiZ3JvdXBTdGF0ZSIsInNldEdyb3VwU3RhdGUiLCJncm91cElkIiwidXNlcklkIiwidXNlck5hbWUiLCJncm91cENvZGUiLCJncm91cE5hbWUiLCJzYXZlZCIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJwYXJzZWQiLCJKU09OIiwicGFyc2UiLCJlcnJvciIsImNvbnNvbGUiLCJyZW1vdmVJdGVtIiwic2V0SXRlbSIsInN0cmluZ2lmeSIsInNldEdyb3VwIiwiY2xlYXJHcm91cCIsImlzSW5Hcm91cCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useGroup.ts\n"));

/***/ })

});